<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAEABADoAgAAJgAAACAgAAABAAgAqAgAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAAAC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmQAA
        AAAAAAAAAAAAAAAAmZmZkHAAAAAAAAAAAAAAAJmZmZmZAAAMAAAAAAAAAACZmZmZmZkADMAAAAAAAAAJ
        mZmZmZmZkMzMwAAAAAAACZmZmZmZmZnMzMzAAAAAAAmZmZmZmZmZzMzMzMAAAAAJmZmZmZmZmczMzMzM
        zMAAmZmZmZmZmZnMzMzMzMzAAJmZmZmZmZmZh8zMzMzMwAmZmZmZmZh5nHjMzMzMzMAJmZmZmZmHh4eM
        zMzMzMzACZmZmZmZmYh4jMzMzMzMAHmZmZmZmZmXiIfMzMzMzAAAAAmZmZmZmIiIfMzMzMwAAAAAC5mZ
        mZiMx4eMzMzAAAAAAAu7mZm4fMzIeHh8wAAAAAC7u7u7iIu8zMzIiHAAAAAAu7u7uHi7u8zMzMwAAAAA
        ALu7u7iLu7sMzMzAAAAAAAu7u7u4i7uwAAAAAAAAAAALu7u7iLu7sAAAAAAAAAAAC7u7u3i7u7AAAAAA
        AAAAAAu7u7uIu7uwAAAAAAAAAAALu7u4i7u7AAAAAAAAAAAAAAAAiIu7uwAAAAAAAAAAAAAAAAAAu7sA
        AAAAAAAAAAAAAAAAAAC7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////D/
        ///gH///4APv/+AAx//gAEH/4AAAf8AAAB/AAAABwAAAAIAAAACAAAAAAAAAAAAAAAAAAAABAAAAAQAA
        AAH4AAAD/AAAA/gAAAf4AAAH+AAAD/AACB/wAA//8AAP//AAD//wAB//+AAf///AH////B////8f////
        //8oAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAMDAwADA3MAA8MqmAAQEBAAICAgADAwMABEREQAWFhYAHBwcACIiIgApKSkAVVVVAE1N
        TQBCQkIAOTk5AIB8/wBQUP8AkwDWAP/szADG1u8A1ufnAJCprQAAADMAAABmAAAAmQAAAMwAADMAAAAz
        MwAAM2YAADOZAAAzzAAAM/8AAGYAAABmMwAAZmYAAGaZAABmzAAAZv8AAJkAAACZMwAAmWYAAJmZAACZ
        zAAAmf8AAMwAAADMMwAAzGYAAMyZAADMzAAAzP8AAP9mAAD/mQAA/8wAMwAAADMAMwAzAGYAMwCZADMA
        zAAzAP8AMzMAADMzMwAzM2YAMzOZADMzzAAzM/8AM2YAADNmMwAzZmYAM2aZADNmzAAzZv8AM5kAADOZ
        MwAzmWYAM5mZADOZzAAzmf8AM8wAADPMMwAzzGYAM8yZADPMzAAzzP8AM/8zADP/ZgAz/5kAM//MADP/
        /wBmAAAAZgAzAGYAZgBmAJkAZgDMAGYA/wBmMwAAZjMzAGYzZgBmM5kAZjPMAGYz/wBmZgAAZmYzAGZm
        ZgBmZpkAZmbMAGaZAABmmTMAZplmAGaZmQBmmcwAZpn/AGbMAABmzDMAZsyZAGbMzABmzP8AZv8AAGb/
        MwBm/5kAZv/MAMwA/wD/AMwAmZkAAJkzmQCZAJkAmQDMAJkAAACZMzMAmQBmAJkzzACZAP8AmWYAAJlm
        MwCZM2YAmWaZAJlmzACZM/8AmZkzAJmZZgCZmZkAmZnMAJmZ/wCZzAAAmcwzAGbMZgCZzJkAmczMAJnM
        /wCZ/wAAmf8zAJnMZgCZ/5kAmf/MAJn//wDMAAAAmQAzAMwAZgDMAJkAzADMAJkzAADMMzMAzDNmAMwz
        mQDMM8wAzDP/AMxmAADMZjMAmWZmAMxmmQDMZswAmWb/AMyZAADMmTMAzJlmAMyZmQDMmcwAzJn/AMzM
        AADMzDMAzMxmAMzMmQDMzMwAzMz/AMz/AADM/zMAmf9mAMz/mQDM/8wAzP//AMwAMwD/AGYA/wCZAMwz
        AAD/MzMA/zNmAP8zmQD/M8wA/zP/AP9mAAD/ZjMAzGZmAP9mmQD/ZswAzGb/AP+ZAAD/mTMA/5lmAP+Z
        mQD/mcwA/5n/AP/MAAD/zDMA/8xmAP/MmQD/zMwA/8z/AP//MwDM/2YA//+ZAP//zABmZv8AZv9mAGb/
        /wD/ZmYA/2b/AP//ZgAhAKUAX19fAHd3dwCGhoYAlpaWAMvLywCysrIA19fXAN3d3QDj4+MA6urqAPHx
        8QD4+PgA8Pv/AKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCgoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKB5S9BwoK
        CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr0lBYWFr0HCgoKAAAAAAAKAAAAAAAAAAAAAAAAAAAACr2U
        Fhbj4xfjlAcKCgAACgcKAAAAAAAAAAAAAAAAAAAKvZSUFuPjFxdHRxYHCgAK1N0KCgAAAAAAAAAAAAAA
        AAqUlJQWFuMXF0dHR0eUChnO1NUHCgoAAAAAAAAAAAAKB5SUlBYW4+MXR0dHR/lHtc7U1dXcBwoKAAAA
        AAAAAAq9lJSUFhbj4xcXR0dH+fmCztTV1dXVCRkKCgoKAAAACr2UlJQWFuPjFxdHR0cm+a3O1NXV1dXc
        3AkZ9AcKAAoHvZSUlBYW4+MXF0dHR0dGzrTV1dXV1dzc3AndGQoACr29lJSUlBbj4xcXF0dHR4y077TV
        1dXV3NwJCRkZCgoHvb29lJSUFuPjFxeTkxdGzrXv1NXV1dXc3AkJGRkKCr29vb2UlJQWFuMXF5Pv7/e0
        77XU1dXV1tzcCQkZ9AoKvb29vZSUlBYW4+MXFxeT7+8H1NTV1dXW3NwJCRkKAAoHvb29lJSUFhbj4xcX
        R620Bwe11dXV1dbc3AkJGQoACgoKCgoHvZQWFuPjFxeNzgcHB7zutdXV3NzcCd30CgAAAAAAAAoKoHoW
        4+MX46C7vNXOtbzw8AkJ3NwJ3QoAAAAAAAAAAApeXl514xd6oPC81M7U1Qnw8fLy8vH0CgAAAAAAAAAK
        oPteXl56eqDw8MPD3NTU1dXcCd3y8woAAAAAAAAAAApe+15eXuXlGvHDw8PD8tXV1dXc3An0CgAAAAAA
        AAAACvv7Xl5e5eXyG6DDw8P2CgcJ3Nzc3QoAAAAAAAAAAArD+/teXl7loPOgoMPDwwoACgoKCgoKAAAA
        AAAAAAAACqD7+15eXuUb86Cgw8PDCgAAAAAAAAAAAAAAAAAAAAAK5fv7Xl5e5fTDoKDDw/YKAAAAAAAA
        AAAAAAAAAAAAAApe+/teXl6g9KCgoMPD9goAAAAAAAAAAAAAAAAAAAAACqDDoOVeXsP/oKCgw8MKAAAA
        AAAAAAAAAAAAAAAAAAAACgoKCgrD9v+goKDDwwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCgqgoMPD
        CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKw8MKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAKCgoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////8P///+Af
        ///gA+//4ADH/+AAQf/gAAB/wAAAH8AAAAHAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAfgA
        AAP8AAAD+AAAB/gAAAf4AAAP8AAIH/AAD//wAA//8AAP//AAH//4AB///8Af///8H////x///////w==
</value>
  </data>
</root>